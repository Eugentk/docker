name: Stage. CI/CD with Blue/Green Deployment
run-name: ${{ github.actor }} is running GitHub Actions ðŸš€

on:
  workflow_dispatch:
    inputs:
      software-setup:
        description: 'Setup/configure required software on EC2 instances (Optional)'
        default: false
        type: boolean
      deployment-env:
        description: 'Deployment environment'
        required: true
        default: 'blue'
        type: choice
        options:
          - blue
          - green
      git-ref:
        description: 'Git Reference (Optional. branch/commit hash)'
        required: false
      jira-id:
        description: 'Jira Release ID (Optional)'
        required: false

env:
    DOCKER_REPOSITORY_DATADOG_URI: 574137177783.dkr.ecr.eu-west-1.amazonaws.com/devops
    ENV_FILE: ${{ secrets.SANDBOX_ENV_FILE }}
    DATADOG_API_KEY: ${{ secrets.DD_API_KEY_SANDBOX }}
    GIT_BRANCH: main
    REPO_URL: https://github.com/Eugentk/docker

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build Docker image
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                ref: ${{ env.GIT_BRANCH }}
              if: github.event.inputs.git-ref == ''

            - name: Checkout Repository (Custom Git Reference)
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                ref: ${{ github.event.inputs.git-ref }}
              if: github.event.inputs.git-ref != ''

            - name: Copy .env file
              run: |
                cat >.env <<EOL
                ${{ env.ENV_FILE }}
                EOL
              shell: bash

            - name: set blue deployment .env variable
              run: sed -i~ '/^BLUE_GREEN_ENV=/s/=.*/="blue"/' .env
            
            - name: set jira release id .env variable
              run: sed -i~ '/^JIRA_RELEASE_ID=/s/=.*/=${{inputs.jira-id}}/' .env

            - name: set short commit
              id: git-hash
              run: echo "short_git_hash=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
            
            - name: short commit
              run: sed -i~ '/^SHORT_GIT_HASH=/s/=.*/=${{steps.git-hash.outputs.short_git_hash}}/' .env
                               
            - name: test tags
              run: echo ${{steps.git-tags.outputs.git_tags}}

            - name: set app version in .env file
              run: |
                APP_VERSION=`./generate_version.sh -p`
                APP_VERSION=$(echo "$APP_VERSION" | sed 's/\//\\\//g')
                sed -ri~ "/^APP_VERSION=/s/=.*/=$APP_VERSION/" .env
              shell: bash

            - name: test .env
              run: cat .env